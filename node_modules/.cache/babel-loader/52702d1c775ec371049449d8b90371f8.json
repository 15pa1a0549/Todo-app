{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nineleaps/Desktop/todo-react/src/components/app.js\";\nimport React, { Component } from 'react'; // Bootstrap for react \n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // Setting up state \n\n    this.state = {\n      userInput: \"\",\n      list: []\n    };\n  } // Set a user input value \n\n\n  updateInput(value) {\n    this.setState({\n      userInput: value\n    });\n  } // Add item if user input in not empty \n\n\n  addItem() {\n    if (this.state.userInput !== '') {\n      const userInput = {\n        // Add a random id which is used to delete \n        id: Math.random(),\n        // Add a user value to list \n        value: this.state.userInput\n      }; // Update list \n\n      const list = [...this.state.list];\n      list.push(userInput); // reset state \n\n      this.setState({\n        list,\n        userInput: \"\"\n      });\n    }\n  } // Function to delete item from list use id to delete \n\n\n  deleteItem(key) {\n    const list = [...this.state.list]; // Filter values and leave value which we need to delete \n\n    const updateList = list.filter(item => item.id !== key); // Update list in state \n\n    this.setState({\n      list: updateList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          fontSize: '3rem',\n          fontWeight: 'bolder'\n        },\n        children: \"TODO LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            span: 5,\n            offset: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              placeholder: \"add item . . . \",\n              size: \"lg\",\n              value: this.state.userInput,\n              onChange: item => this.updateInput(item.target.value),\n              \"aria-label\": \"add something\",\n              \"aria-describedby\": \"basic-addon2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"dark\",\n                size: \"lg\",\n                onClick: () => this.addItem(),\n                children: \"ADD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: {\n            span: 5,\n            offset: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: this.state.list.map(item => {\n              return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                variant: \"dark\",\n                action: true,\n                onClick: () => this.deleteItem(item.id),\n                children: item.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/nineleaps/Desktop/todo-react/src/components/app.js"],"names":["React","Component","Container","Row","Col","Button","InputGroup","FormControl","ListGroup","App","constructor","props","state","userInput","list","updateInput","value","setState","addItem","id","Math","random","push","deleteItem","key","updateList","filter","item","render","display","justifyContent","alignItems","fontSize","fontWeight","span","offset","target","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAGA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AACxBS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH,GATuB,CAWxB;;;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKC,QAAL,CAAc;AACVJ,MAAAA,SAAS,EAAEG;AADD,KAAd;AAGH,GAhBuB,CAkBxB;;;AACAE,EAAAA,OAAO,GAAG;AACN,QAAI,KAAKN,KAAL,CAAWC,SAAX,KAAyB,EAA7B,EAAiC;AAC7B,YAAMA,SAAS,GAAG;AAEd;AACAM,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EAHU;AAKd;AACAL,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC;AANJ,OAAlB,CAD6B,CAU7B;;AACA,YAAMC,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb;AACAA,MAAAA,IAAI,CAACQ,IAAL,CAAUT,SAAV,EAZ6B,CAc7B;;AACA,WAAKI,QAAL,CAAc;AACVH,QAAAA,IADU;AAEVD,QAAAA,SAAS,EAAE;AAFD,OAAd;AAIH;AACJ,GAxCuB,CA0CxB;;;AACAU,EAAAA,UAAU,CAACC,GAAD,EAAM;AACZ,UAAMV,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb,CADY,CAGZ;;AACA,UAAMW,UAAU,GAAGX,IAAI,CAACY,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYK,GAAhC,CAAnB,CAJY,CAMZ;;AACA,SAAKP,QAAL,CAAc;AACVH,MAAAA,IAAI,EAAEW;AADI,KAAd;AAIH;;AAEDG,EAAAA,MAAM,GAAG;AACZ,wBAGO,QAAC,SAAD;AAAA,8BAEI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AACRC,UAAAA,OAAO,EAAE,MADD;AAERC,UAAAA,cAAc,EAAE,QAFR;AAGRC,UAAAA,UAAU,EAAE,QAHJ;AAIRC,UAAAA,QAAQ,EAAE,MAJF;AAKRC,UAAAA,UAAU,EAAE;AALJ,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAYI;AAAA;AAAA;AAAA;AAAA,cAZJ,eAaI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,MAAM,EAAE;AAAnB,WAAT;AAAA,iCAEI,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,MAAtB;AAAA,oCACI,QAAC,WAAD;AACI,cAAA,WAAW,EAAC,iBADhB;AAEI,cAAA,IAAI,EAAC,IAFT;AAGI,cAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWC,SAHtB;AAII,cAAA,QAAQ,EAAEc,IAAI,IAAI,KAAKZ,WAAL,CAAiBY,IAAI,CAACS,MAAL,CAAYpB,KAA7B,CAJtB;AAKI,4BAAW,eALf;AAMI,kCAAiB;AANrB;AAAA;AAAA;AAAA;AAAA,oBADJ,eASI,QAAC,UAAD,CAAY,MAAZ;AAAA,qCACI,QAAC,MAAD;AACI,gBAAA,OAAO,EAAC,MADZ;AAEI,gBAAA,IAAI,EAAC,IAFT;AAGI,gBAAA,OAAO,EAAE,MAAM,KAAKE,OAAL,EAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ,eAsCI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEgB,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,MAAM,EAAE;AAAnB,WAAT;AAAA,iCACI,QAAC,SAAD;AAAA,sBAEK,KAAKvB,KAAL,CAAWE,IAAX,CAAgBuB,GAAhB,CAAoBV,IAAI,IAAI;AACzB,kCAEI,QAAC,SAAD,CAAW,IAAX;AAAgB,gBAAA,OAAO,EAAC,MAAxB;AAA+B,gBAAA,MAAM,MAArC;AACI,gBAAA,OAAO,EAAE,MAAM,KAAKJ,UAAL,CAAgBI,IAAI,CAACR,EAArB,CADnB;AAAA,0BAEKQ,IAAI,CAACX;AAFV;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAQH,aATA;AAFL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHP;AA4DI;;AArHuB;;AAwH5B,eAAeP,GAAf","sourcesContent":["import React, { Component } from 'react';\n\n// Bootstrap for react \nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        // Setting up state \n        this.state = {\n            userInput: \"\",\n            list: []\n        }\n    }\n\n    // Set a user input value \n    updateInput(value) {\n        this.setState({\n            userInput: value,\n        });\n    }\n\n    // Add item if user input in not empty \n    addItem() {\n        if (this.state.userInput !== '') {\n            const userInput = {\n\n                // Add a random id which is used to delete \n                id: Math.random(),\n\n                // Add a user value to list \n                value: this.state.userInput\n            };\n\n            // Update list \n            const list = [...this.state.list];\n            list.push(userInput);\n\n            // reset state \n            this.setState({\n                list,\n                userInput: \"\"\n            });\n        }\n    }\n\n    // Function to delete item from list use id to delete \n    deleteItem(key) {\n        const list = [...this.state.list];\n\n        // Filter values and leave value which we need to delete \n        const updateList = list.filter(item => item.id !== key);\n\n        // Update list in state \n        this.setState({\n            list: updateList,\n        });\n\n    }\n\n    render() {\n return (\n        \n        \n        <Container>\n\n            <Row style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                fontSize: '3rem',\n                fontWeight: 'bolder',\n            }}\n            >TODO LIST\n\t\t\t</Row>\n\n            <hr />\n            <Row>\n                <Col md={{ span: 5, offset: 4 }}>\n\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                            placeholder=\"add item . . . \"\n                            size=\"lg\"\n                            value={this.state.userInput}\n                            onChange={item => this.updateInput(item.target.value)}\n                            aria-label=\"add something\"\n                            aria-describedby=\"basic-addon2\"\n                        />\n                        <InputGroup.Append>\n                            <Button\n                                variant=\"dark\"\n                                size=\"lg\"\n                                onClick={() => this.addItem()}\n                            >\n                                ADD\n\t\t\t</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n\n                </Col>\n            </Row>\n            <Row>\n                <Col md={{ span: 5, offset: 4 }}>\n                    <ListGroup>\n                        {/* map over and print items */}\n                        {this.state.list.map(item => {\n                            return (\n\n                                <ListGroup.Item variant=\"dark\" action\n                                    onClick={() => this.deleteItem(item.id)}>\n                                    {item.value}\n                                </ListGroup.Item>\n\n                            )\n                        })}\n                    </ListGroup>\n                </Col>\n            </Row>\n        </Container>\n        );\n    }\n}\n\nexport default App; \n"]},"metadata":{},"sourceType":"module"}